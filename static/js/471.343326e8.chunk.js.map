{"version":3,"file":"static/js/471.343326e8.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 16px;\n\n  font-weight: 500;\n  text-decoration: none;\n\n  border-radius: 4px;\n  color: black;\n\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover {\n    color: white;\n    background-color: #b18742;\n  }\n`;","import { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};","import styled from '@emotion/styled';\n\nconst MovieInfo = styled.div`\n  display: flex;\n  gap: 32px;\n\n  margin-top: 32px;\n  margin-bottom: 24px;\n\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nconst MovieDetailedInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nconst MovieTitle = styled.h1`\n  font-size: 36px;\n  font-weight: 600;\n  line-height: 42px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  gap: 16px;\n\n  font-size: 18px;\n  line-height: 24px;\n`;\n\nexport { MovieInfo, MovieDetailedInfo, MovieTitle, List };","import { useEffect, useState } from 'react';\nimport { MovieInfo, MovieDetailedInfo, MovieTitle, List } from './Movie.styled';\n\nexport const Movie = ({\n  title,\n  overview,\n  poster,\n  released = '',\n  genres = [],\n  rating,\n}) => {\n  const [releaseDate, setRealeaseDate] = useState('999 BC');\n  const defaultMoviePoster =\n    'https://m.media-amazon.com/images/M/MV5BMDFiMzFiNTYtNDY2Yy00ZjhhLWIyZGMtNmM4ZDA4YjJlNjA0XkEyXkFqcGdeQXVyMjQwMDg0Ng@@._V1_.jpg';\n\n  useEffect(() => {\n    const year = released.split('-');\n    setRealeaseDate(year[0]);\n  }, [released]);\n\n  return (\n    <MovieInfo>\n      <img\n        src={\n          poster !== undefined\n            ? 'https://image.tmdb.org/t/p/w500' + poster\n            : defaultMoviePoster\n        }\n        alt=\"Movie poster\"\n        width=\"300\"\n      />\n      <MovieDetailedInfo>\n        <MovieTitle>\n          {title} ({releaseDate})\n        </MovieTitle>\n\n        <p>\n          <b>User score: </b>\n          {Math.floor(rating * 10)}%\n        </p>\n\n        <b>Overview: </b>\n        <p>{overview}</p>\n\n        <b>Genres: </b>\n        <List>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </List>\n      </MovieDetailedInfo>\n    </MovieInfo>\n  );\n};","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\nimport { BackLink } from '../components/BackLink/BackLink';\nimport { Movie } from '../components/Movie/Movie';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetchMovieDetails(id).then(setMovie);\n  }, [id]);\n\n  const { title, overview, poster_path, release_date, genres, vote_average } =\n    movie;\n\n  return (\n    <>\n      <BackLink to={backLinkRef.current}>Go Back</BackLink>\n      <Movie\n        title={title}\n        overview={overview}\n        poster={poster_path}\n        released={release_date}\n        genres={genres}\n        rating={vote_average}\n      />\n\n      <b>Additional information: </b>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;","import axios from 'axios';\n\nconst API_KEY = '84acf63cced10e4fb48b321130e5907f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst fetchMovies = async searchQuery => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data;\n};\n\nconst fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport {\n  fetchTrending,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchCast,\n  fetchReviews,\n};"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","BackLink","_ref","to","children","_jsx","MovieInfo","MovieDetailedInfo","_templateObject2","MovieTitle","_templateObject3","List","_templateObject4","Movie","title","overview","poster","_ref$released","released","_ref$genres","genres","rating","_useState","useState","_useState2","_slicedToArray","releaseDate","setRealeaseDate","useEffect","year","split","_jsxs","src","undefined","alt","width","Math","floor","map","_ref2","id","name","_location$state$from","_location$state","useParams","location","useLocation","movie","setMovie","backLinkRef","useRef","state","from","fetchMovieDetails","then","poster_path","release_date","vote_average","_Fragment","current","Suspense","fallback","Outlet","API_KEY","axios","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","params","api_key","sent","abrupt","data","results","stop","apply","arguments","fetchMovies","_callee2","searchQuery","_context2","query","_x","_ref3","_callee3","_context3","concat","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}